%define docroot /var/www

%if 0%{?fedora} >= 15 || 0%{?rhel} >= 7 || 0%{?suse_version} >= 1210 || 0%{?amzn} >= 2
  %global with_systemd 1
%else
  %global with_systemd 0
%endif

%if 0%{?fedora} >= 15 || 0%{?rhel} >= 7 || 0%{?amzn} >= 2
%{?perl_default_filter}
%global __requires_exclude perl\\(VMS|perl\\(Win32|perl\\(Server::Starter
%else
%if 0%{?rhel} == 6 || 0%{?amzn} == 1
%{?filter_setup:
%filter_requires_in %{_datadir}
%filter_setup
}
%endif
%endif

%define gitdate @H2O_GIT_DATE@
%define gitref_l @H2O_GIT_REF@
%define gitref_s @H2O_GIT_REF_SHORT@
%define rebuild @H2O_GIT_DATE_REBUILD@

%define openssl_version @OPENSSL_VERSION@
%define openssl_static 1
%if 0%{?rhel} >= 9
  %define x64_level x86-64-v2
%else
  %define x64_level x86-64
%endif

Summary: H2O - The optimized HTTP/1, HTTP/2 server
Name: h2o
Version: 2.3.0
Release: 1.git%{gitdate}.%{rebuild}.%{gitref_s}%{?dist}
URL: https://h2o.examp1e.net/
Source0: h2o-%{gitref_l}.tar.gz
Source1: index.html
Source2: h2o.logrotate
Source3: h2o.init
Source4: h2o.service
Source5: h2o.conf
Source6: h2o-tmpfile.conf

Patch2000: h2o-rpm-revision.patch

%if %{openssl_static}
Source1000: h2o-openssl-%{openssl_version}.tar.gz
%endif

License: MIT
Group: System Environment/Daemons
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: autoconf
BuildRequires: automake
BuildRequires: bison
BuildRequires: cmake >= 2.8
BuildRequires: git
BuildRequires: libtool
BuildRequires: openssl-devel
BuildRequires: perl
BuildRequires: pkgconfig
BuildRequires: zlib-devel
%if 0%{?rhel} >= 8
BuildRequires: gcc-c++
BuildRequires: ruby
BuildRequires: rubygem-rake
%else
%if 0%{?rhel} == 6
BuildRequires: devtoolset-7-gcc-c++
%else
BuildRequires: devtoolset-9-gcc-c++
%endif
%endif
%if %{openssl_static}
BuildRequires: perl-IPC-Cmd
%endif
Requires: openssl
Requires: perl-interpreter
%if %{with_systemd}
%if 0%{?suse_version}
BuildRequires: systemd-rpm-macros
%{?systemd_requires}
%else
%if 0%{?rhel} < 9
BuildRequires: systemd-units
%endif
Requires(preun): systemd
Requires(postun): systemd
Requires(post): systemd
%endif
%else
Requires: initscripts >= 8.36
Requires(post): chkconfig
%endif
%if 0%{?rhel} >= 8
Suggests: h2o-doc = %{version}-%{release}
%else
Requires: h2o-doc = %{version}-%{release}
%endif


%description
H2O is a very fast HTTP server written in C. It can also be used
as a library.

%package doc
Group: System Environment/Daemons
Summary: H2O - The optimized HTTP/1, HTTP/2 server

%description doc
Document files for H2O webserver.



%prep
%setup -q -n h2o-%{gitref_l}
%patch2000 -p1

# prepare openssl
%if %{openssl_static}
%define openssl_build %{_tmppath}/%{name}-%{version}-%{release}-openssl-build
mkdir -p %{openssl_build}
tar -z -x -f %{SOURCE1000} -C %{openssl_build} --strip-components=1
%endif


%build
# build OpenSSL
%if %{openssl_static}
pushd %{openssl_build}
%define openssl_root %{_tmppath}/%{name}-%{version}-%{release}-openssl-root
./config \
  --release \
  --prefix=%{openssl_root} \
  --libdir=%{openssl_root}/lib \
  --with-rand-seed=devrandom \
  no-asm \
  no-comp \
  no-shared \
  no-tests \
  no-zlib \
  CFLAGS="-O2 -march=%{x64_level} -mtune=generic -DNDEBUG" \
  CXXFLAGS="-O2 -march=%{x64_level} -mtune=generic -DNDEBUG"
make %{?_smp_mflags}
make install_sw
popd
%endif

# Build H2O
%define cmake_build_flags -O2 -march=%{x64_level} -mtune=generic -DH2O_GITREV=%{gitref_s} -DH2O_RPM_REVISION=%{name}-%{version}-%{release}
cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_C_FLAGS="%{cmake_build_flags}" \
    -DCMAKE_CXX_FLAGS="%{cmake_build_flags}" \
    -DWITH_H2OLOG=off \
%if 0%{?rhel} >= 8
    -DWITH_MRUBY=on \
%else
    -DWITH_DTRACE=off \
    -DWITH_MRUBY=off \
%endif
%if %{openssl_static}
    -DOPENSSL_ROOT_DIR=%{openssl_root} \
    -DCMAKE_INCLUDE_PATH=%{openssl_root}/include \
    -DCMAKE_LIBRARY_PATH=%{openssl_root}/lib \
%endif
    -DCMAKE_INSTALL_PREFIX=%{_prefix} \
    .
make %{?_smp_mflags}

# # for building shared library
# cmake \
#     -DWITH_H2OLOG=off \
#     -DWITH_MRUBY=on \
#     -DCMAKE_INSTALL_PREFIX=%{_prefix} \
#     -DBUILD_SHARED_LIBS=on \
#     .
# make %{?_smp_mflags}

%if !%{with_systemd}
sed -i -e 's,\( *\).*systemctl.* >,\1/sbin/service h2o reload >,' %{SOURCE2}
%endif

%if 0%{?suse_version}
sed -i -e '/localhost:443/,/file.dir/s/^/#/' -e 's|\(file.dir: \).*|\1/srv/www/htdocs|' %{SOURCE5}
%endif

%install
rm -rf $RPM_BUILD_ROOT

make DESTDIR=$RPM_BUILD_ROOT install

# mkdir -p $RPM_BUILD_ROOT/%{_libdir}
# mkdir -p $RPM_BUILD_ROOT/%{_libdir}/pkgconfig
# install -m 644 -p libh2o.pc \
#         $RPM_BUILD_ROOT%{_libdir}/pkgconfig/libh2o.pc
# 
# install -m 644 -p libh2o-evloop.pc \
#         $RPM_BUILD_ROOT%{_libdir}/pkgconfig/libh2o-evloop.pc

mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/h2o
install -m 644 -p $RPM_SOURCE_DIR/h2o.conf \
        $RPM_BUILD_ROOT%{_sysconfdir}/h2o/h2o.conf

%if 0%{?suse_version} == 0
# docroot
mkdir -p $RPM_BUILD_ROOT%{docroot}/html
install -m 644 -p $RPM_SOURCE_DIR/index.html \
        $RPM_BUILD_ROOT%{docroot}/html/index.html
%endif

# Set up /var directories
mkdir -p $RPM_BUILD_ROOT%{_localstatedir}/log/h2o

%if %{with_systemd}
# Install systemd service files
mkdir -p $RPM_BUILD_ROOT%{_unitdir}
install -m 644 -p $RPM_SOURCE_DIR/h2o.service \
	$RPM_BUILD_ROOT%{_unitdir}/h2o.service

mkdir -p $RPM_BUILD_ROOT/run/h2o
mkdir -p $RPM_BUILD_ROOT%{_prefix}/lib/tmpfiles.d
install -m 644 -p $RPM_SOURCE_DIR/h2o-tmpfile.conf \
        $RPM_BUILD_ROOT%{_prefix}/lib/tmpfiles.d/h2o.conf
%else
# install SYSV init stuff
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/rc.d/init.d
install -m 755 -p $RPM_SOURCE_DIR/h2o.init \
	$RPM_BUILD_ROOT%{_sysconfdir}/rc.d/init.d/h2o

mkdir -p $RPM_BUILD_ROOT%{_localstatedir}/run/h2o
%endif

# install log rotation stuff
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/logrotate.d
install -m 644 -p $RPM_SOURCE_DIR/h2o.logrotate \
	$RPM_BUILD_ROOT%{_sysconfdir}/logrotate.d/h2o

rm -rf $RPM_BUILD_ROOT/usr/include/h2o*
rm -rf $RPM_BUILD_ROOT/usr/include/picotls*
rm -rf $RPM_BUILD_ROOT/usr/include/quicly*
rm -rf $RPM_BUILD_ROOT/usr/lib64/pkgconfig/libh2o*

%define sslcert %{_sysconfdir}/pki/tls/certs/localhost.crt
%define sslkey %{_sysconfdir}/pki/tls/private/localhost.key

%pre
%if %{with_systemd} && 0%{?suse_version}
%service_add_pre h2o.service
%endif

%post
%if %{with_systemd}
%if 0%{?suse_version}
%service_add_post h2o.service
%else
%systemd_post h2o.service
%endif
%else
# Register the h2o service
/sbin/chkconfig --add h2o
%endif

%if 0%{?suse_version} == 0
umask 037
if [ -f %{sslkey} -o -f %{sslcert} ]; then
   exit 0
fi

if [ ! -f %{sslkey} ] ; then
%{_bindir}/openssl genrsa -rand /proc/apm:/proc/cpuinfo:/proc/dma:/proc/filesystems:/proc/interrupts:/proc/ioports:/proc/pci:/proc/rtc:/proc/uptime 2048 > %{sslkey} 2> /dev/null
fi

FQDN=`hostname`
if [ "x${FQDN}" = "x" ]; then
   FQDN=localhost.localdomain
fi

if [ ! -f %{sslcert} ] ; then
cat << EOF | %{_bindir}/openssl req -new -key %{sslkey} \
         -x509 -sha256 -days 365 -set_serial $RANDOM -extensions v3_req \
         -out %{sslcert} 2>/dev/null
--
SomeState
SomeCity
SomeOrganization
SomeOrganizationalUnit
${FQDN}
root@${FQDN}
EOF
fi

if [ -f %{sslkey} ]; then
   chgrp nobody %{sslkey}
fi

if [ -f %{sslcert} ]; then
   chgrp nobody %{sslcert}
fi
%endif

%preun
%if %{with_systemd}
%if 0%{?suse_version}
%service_del_preun h2o.service
%else
%systemd_preun h2o.service
%endif
%else
if [ $1 = 0 ]; then
	/sbin/service h2o stop > /dev/null 2>&1
	/sbin/chkconfig --del h2o
fi
%endif

%postun
%if %{with_systemd}
%if 0%{?suse_version}
%service_del_postun h2o.service
%else
%systemd_postun h2o.service
%endif
if [ $1 -ge 1 ]; then
    systemctl status h2o >/dev/null 2>&1 || exit 0
    systemctl reload h2o >/dev/null 2>&1 || echo "Binary upgrade failed, please check h2o's error.log"
fi
%else
if [ $1 -ge 1 ]; then
    service h2o status >/dev/null 2>&1 || exit 0
    service h2o reload >/dev/null 2>&1 || echo "Binary upgrade failed, please check h2o's error.log"
fi
%endif

%clean
rm -rf $RPM_BUILD_ROOT


%files
%defattr(-,root,root)

%dir %{_sysconfdir}/h2o
%config(noreplace) %{_sysconfdir}/h2o/h2o.conf
%config(noreplace) %{_sysconfdir}/logrotate.d/h2o

%if %{with_systemd}
%{_unitdir}/h2o.service
%{_prefix}/lib/tmpfiles.d/h2o.conf
%else
%{_sysconfdir}/rc.d/init.d/h2o
%endif

%{_bindir}/h2o
%{_datadir}/h2o
%{_datadir}/man

%if 0%{?suse_version} == 0
%dir %{docroot}
%dir %{docroot}/html
%config(noreplace) %{docroot}/html/index.html
%endif

%if %{with_systemd}
%attr(0770,root,nobody) %dir /run/h2o
%else
%attr(0710,root,nobody) %dir %{_localstatedir}/run/h2o
%endif
%attr(0700,root,root) %dir %{_localstatedir}/log/h2o


%files doc
%{_datadir}/doc/h2o


%changelog
